import { DiscoveryService } from '@nestjs-plus/discovery';
import { DynamicModule, OnModuleInit } from '@nestjs/common';
import { AsyncOptionsFactoryProvider } from '@nestjs-plus/common';
import { ExternalContextCreator } from '@nestjs/core/helpers/external-context-creator';
import { AmqpConnection } from './amqp/connection';
import { RabbitMQConfig } from './rabbitmq.interfaces';
export declare class RabbitMQModule implements OnModuleInit {
    private readonly discover;
    private readonly amqpConnection;
    private readonly externalContextCreator;
    private readonly logger;
    constructor(discover: DiscoveryService, amqpConnection: AmqpConnection, externalContextCreator: ExternalContextCreator);
    static forRootAsync(asyncOptionsFactoryProvider: AsyncOptionsFactoryProvider<RabbitMQConfig>): DynamicModule;
    static forRoot(config: RabbitMQConfig): DynamicModule;
    static build(config: RabbitMQConfig): DynamicModule;
    static attach(connection: AmqpConnection): DynamicModule;
    onModuleInit(): Promise<void>;
    private static createAsyncProviders;
}
//# sourceMappingURL=rabbitmq.module.d.ts.map